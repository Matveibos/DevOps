1)Развернуть jenkins
2)Создать Job, она должна уметь разворачивать ELK stack на другом slave любым способом. Если не хватает ресурсов, тогда развернуть только Elasticsearch.
__________________________________________________
Задание 1 

1) чтобы развернуть jenkins воспользовался инструкцией https://www.jenkins.io/doc/book/installing/linux/

2)выполнил команды 
sudo wget -O /usr/share/keyrings/jenkins-keyring.asc \
  https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key
echo deb [signed-by=/usr/share/keyrings/jenkins-keyring.asc] \
  https://pkg.jenkins.io/debian-stable binary/ | sudo tee \
  /etc/apt/sources.list.d/jenkins.list > /dev/null
sudo apt-get update
sudo apt-get install jenkins

3) Для работы jenkins необходимо установить Java. Для этого выполнил команды
sudo apt update
sudo apt install fontconfig openjdk-17-jre
java -version

4) После установки Jenkins и Java необходимо запустить Jenkins как службу.
sudo systemctl enable jenkins
sudo systemctl start jenkins

И проверить статус командой sudo systemctl status jenkins
После проверки можно перейти на localhost:8080 для входа и работы в jenkins. После перехода на localhost:8080 необходимо булет выполнить инструкции(это не сложно думаю, что  описывать это не нужно)


Задание 2

Для выполнения данного задания необходимо выполнить ряд шагов
1) Развернуть  Node (в моем случае вторую виртуальную машину). Изначально была взята машина Debian(версия Java была отличная от версии на Master  машине Ubuntu, но на ней возникли сложности с установкой docker. Однако ответственно заявляю, что подключиться к ней и выполнять на ней Jobs возможно. Дабы сэкономить время я сделал копию текущей машины, удалив на ней Jenkins но оставив Docker и Java.

2) Добавить Node в Jenkins и успешно подключиться к Node. Здесь можно остановиться подробнее.
	2.1) Для осуществления задуманного необходимо первым делом на машине Master сгенерировать ssh-key с помощью команды ssh-keygen(на все вопросы нажимал enter для упрощения решения и уменьшения возможных причин возникновения неполадок.

	2.2) После успешной генерации ключа с помощью команды cat ~/.ssh/idrsa.pub просмотреть публичный ключ.

	2.3) Далее необходимо на машине Slave добавить данный ключ по пути ~/.ssh/authorized_keys. после этого желательно подключиться к машине Slave по SSH. чтобы информация об этой машине была занесена в ~/.ssh/known_hosts.

	2.4) После добавления ключа необходимо создать Node в веб-интерфейсе Jenkins на машине Master

	2.5) Для добавления Node необходимо перейти во вкладку Dashboard и выбрать вкладку Menage Jenkins. После этого перейти во вкладку Nodes и нажать кнопку New Node.

	2.6) В открывшемся окне ввести Название узла и выбрать параметр Permanent Agent.

	2.7) Далее необходимо заполнить поля в новом окне, необходимо обязательно заполнить поле Remote Root Directory в эту директорию будут складываться файлы на машине Slave, Указать Labels значение из этого поля понадобится на этапе создания Job для конкретного Slave, Launch method необходимо выбрать как Launch agents via SSH( после выбора появятся еще два поля в которые нужно ввести Ip адрес и также нужно добавить Credentials

	2.8) Для добавления Credentials необходимо нажать "Add", и выбрать Jenkins. После чего откроется окно для добвления credentials. В Данном окне необходимо выбрать вид: "SSH username vith private key". Далее имя пользователя от которого будет осуществляться подключение по SSH и также необходимо ввести Private key. Данный ключ генерируется вместе с публичным. Просмотреть его можно с помощью команды cat ~/.ssh/idrsa. Данный ключ необходимо скопировать в поле Private key.

	2.9) После заполнения полей необходимо нажать save и запустить Agent. В моем случае была ошибка, что Jenkins не мог найти known_hosts и я соприровал файлик known_hosts в диркеторию /var/lib/jenkins/.ssh.

	2.10) Также возможно столкнуться с проблемой невозможности подключения по SSH (решил командой  sudo apt install openssh-server)

3)После успешного подключения по SSH и запуск простейшего Job на Slave необхлдимо установить ELK stack на машину Slave. 
	3.1) Необходимо выполнить также небольшие изменения на машине Slave, а именно опытным путем установлено, что образ который был найден на просторах Docker-hub`а не будет работать если не выполнить команду sysctl -w vm.max_map_count=262144.

	3.2) Также необходимо пользователя matvey(именно от этого пользователя я выполнял команды) добавить в группу docker для запуска команд docker без ввода "sudo". Выполнить это дейстиве возможно с помощью команды sudo usermod -aG docker matvey(отрабатывала как-то странно в одном терминале команда id -Gn показывает что пользователь в необходимой группе, а в другом терминале что нет, но всё же удалось добиться результата и пользователь matvey был добавлен в группу docker.

	3.3) Для выполнения данной задачи необходимо создать Job который будет выполнять команду для docker на машине Slave. Для этого нужно создать Job и просписать в нем команду docker run -d -p 5601:5601 -p 9200:9200 -p 5044:5044 --name elk sebp/elk. Спустя некоторое время( которе необходимо на скачивание образа и запуска контейнера) на машине Slave перейдя по адресу localhost:5601 можно будет увидеть что сервис Elastic поднялся и работает скриншот находится в папке с домашним заданием.
 
 

